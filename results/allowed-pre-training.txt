With simple NER Example, at this commit:

Simulated Human Error Rate: 30% -> on error choose tag uniformly at random
Data: 100 sentences. From CoNLL dataset, filtered for len < 15 for processing speed

System is allowed to train on 100 other (non testing) sentences from CoNLL dataset
 - Overfits to 0.9649691858579306 on the training set

-------
One human question per token baseline:
Map((I-MISC,I-ORG) -> 1, (I-ORG,I-ORG) -> 20, (I-PER,I-ORG) -> 1, (I-PER,O) -> 3, (I-MISC,O) -> 5, (O,I-LOC) -> 54, (O,I-PER) -> 42, (I-ORG,I-LOC) -> 1, (I-PER,I-PER) -> 27, (I-MISC,I-MISC) -> 32, (I-ORG,I-PER) -> 3, (I-PER,I-LOC) -> 4, (I-LOC,O) -> 4, (O,I-MISC) -> 47, (I-PER,I-MISC) -> 3, (I-LOC,I-ORG) -> 2, (O,O) -> 636, (I-LOC,I-PER) -> 1, (I-ORG,I-MISC) -> 3, (I-LOC,I-LOC) -> 33, (I-LOC,I-MISC) -> 6, (I-MISC,I-PER) -> 3, (O,I-ORG) -> 41, (I-ORG,O) -> 1)
Accuracy: 0.7687564234326825
# human queries: 973
-------
3 human question per token baseline, take max-vote of humans:
Map((I-MISC,I-ORG) -> 2, (I-ORG,I-ORG) -> 28, (I-PER,I-ORG) -> 1, (I-MISC,O) -> 1, (O,I-LOC) -> 15, (O,I-PER) -> 18, (I-MISC,I-MISC) -> 38, (I-PER,I-PER) -> 36, (O,I-MISC) -> 17, (I-LOC,I-ORG) -> 1, (I-PER,I-MISC) -> 1, (I-LOC,I-PER) -> 1, (O,O) -> 741, (I-LOC,I-LOC) -> 43, (I-LOC,I-MISC) -> 1, (O,I-ORG) -> 29)
Accuracy: 0.9105858170606372
# human queries: 3892
-------
CRF with basic features [Token, POS and Capitalization] with NO HUMAN ASSISTANCE
Map((I-MISC,I-ORG) -> 11, (I-ORG,I-ORG) -> 7, (I-PER,I-ORG) -> 2, (I-PER,O) -> 11, (I-MISC,O) -> 7, (O,I-LOC) -> 6, (O,I-PER) -> 9, (I-ORG,I-LOC) -> 9, (I-MISC,I-MISC) -> 19, (I-PER,I-PER) -> 23, (I-ORG,I-PER) -> 3, (I-PER,I-LOC) -> 2, (I-LOC,O) -> 9, (O,I-MISC) -> 4, (I-LOC,I-ORG) -> 6, (I-LOC,I-PER) -> 3, (O,O) -> 762, (I-ORG,I-MISC) -> 3, (I-LOC,I-LOC) -> 28, (I-MISC,I-PER) -> 2, (O,I-ORG) -> 39, (I-MISC,I-LOC) -> 2, (I-ORG,O) -> 6)
Accuracy: 0.8622816032887975
# queries: 0
-------
CRF with basic features [Token, POS and Capitalization] with player who asks for one question per token uniformly
Map((I-ORG,I-ORG) -> 21, (I-PER,I-ORG) -> 1, (I-PER,O) -> 5, (I-MISC,O) -> 5, (O,I-LOC) -> 2, (I-ORG,I-LOC) -> 2, (I-MISC,I-MISC) -> 36, (I-PER,I-PER) -> 27, (I-ORG,I-PER) -> 2, (I-PER,I-LOC) -> 2, (I-LOC,O) -> 3, (O,I-MISC) -> 3, (I-PER,I-MISC) -> 3, (I-LOC,I-ORG) -> 2, (O,O) -> 810, (I-ORG,I-MISC) -> 2, (I-LOC,I-LOC) -> 38, (I-LOC,I-MISC) -> 3, (O,I-ORG) -> 5, (I-ORG,O) -> 1)
Accuracy: 0.9578622816032888
# queries: 973
-------
CRF with basic features [Token, POS and Capitalization] with one move look ahead loss minimizing game player
Loss function:
    val expectedErrors = mostLikelyGuesses.map{
      // we much prefer to not tag 0s incorrectly
      case (_,"0",p) => (1.0 - p)*5.0
      case t => 1.0 - t._3
    }.sum
    // This will trade 10 human labels for fully correct token
    expectedErrors*10 + cost
Map((I-ORG,I-ORG) -> 26, (I-PER,O) -> 1, (I-MISC,O) -> 3, (O,I-LOC) -> 4, (I-MISC,I-MISC) -> 36, (I-PER,I-PER) -> 35, (I-PER,I-LOC) -> 1, (I-LOC,O) -> 2, (I-PER,I-MISC) -> 1, (O,O) -> 814, (I-LOC,I-LOC) -> 44, (O,I-ORG) -> 2, (I-MISC,I-LOC) -> 2, (I-ORG,O) -> 2)
Accuracy: 0.9815005138746146
# queries: 373
